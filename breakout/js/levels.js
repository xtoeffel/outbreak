
class Level {
    constructor() {
        this.colorMatrix = null
        this.brickMatrix = null
        this.pointMatrix = null
        this.powerItemMatrix = null

        this.brickHeight = 20
        this.brickWidth = 40
        this.padding = 6
    }
}


createBricks = (level, canvas) => {

    if (!Array.isArray(level.brickMatrix)) {
        throw "bricks-matrix is not an array"
    }
    if (!Array.isArray(level.colorMatrix)) {
        throw "color-matrix is not an array"
    }
    if (!Array.isArray(level.pointMatrix)) {
        throw "point-matrix is not an array"
    }
    if (!Array.isArray(level.powerItemMatrix)) {
        throw "powerItem-matrix is not an array"
    }

    if (level.brickMatrix.length == 0) {
        throw "brick-matrix is empty"
    }
    if (level.colorMatrix.length == 0) {
        throw "color-matrix is empty"
    }
    if (level.pointMatrix.length == 0) {
        throw "point-matrix is empty"
    }
    if (level.powerItemMatrix.length == 0) {
        throw "powerItem-matrix is empty"
    }

    let rowsCount = level.brickMatrix.length
    if (rowsCount != level.colorMatrix.length) {
        throw "brick-matrix and color-matrix have different number of rows"
    }
    if (rowsCount != level.pointMatrix.length) {
        throw "brick-matrix and point-matrix have different number of rows"
    }
    if (rowsCount != level.powerItemMatrix.length) {
        throw "brick-matrix and powerItem-matrix have different number of rows"
    }

    columnsCount = 0
    for (let row = 0; row < level.brickMatrix.length; row++) {
        if (!Array.isArray(level.brickMatrix[row]))
            throw "brick-matrix: row " + row + " is not an array"
        if (row === 0) {
            columnsCount = level.brickMatrix[row].length
            continue
        }
        if (level.brickMatrix[row].length != columnsCount)
            throw "brick-matrix: inconsistent number of columns in row " + row
    }
    for (let row = 0; row < level.colorMatrix.length; row++) {
        if (!Array.isArray(level.colorMatrix[row])) {
            throw "color-matrix: row " + row + "isn't an array"
        }
        if (level.colorMatrix[row].length != columnsCount) {
            throw "color-matrix: invalid number of columns in row " + row + ", expected "
            + columnsCount + " found " + level.colorMatrix[row].length
        }
        if (!Array.isArray(level.pointMatrix[row])) {
            throw "point-matrix: row " + row + "isn't an array"
        }
        if (level.pointMatrix[row].length != columnsCount) {
            throw "point-matrix: invalid number of columns in row " + row + ", expected "
            + columnsCount + " found " + level.pointMatrix[row].length
        }
        if (!Array.isArray(level.powerItemMatrix[row])) {
            throw "powerItem-matrix: row " + row + "isn't an array"
        }
        if (level.powerItemMatrix[row].length != columnsCount) {
            throw "powerItem-matrix: invalid number of columns in row " + row + ", expected "
            + columnsCount + " found " + level.powerItemMatrix[row].length
        }
    }

    bricks = new Array(rowsCount * columnsCount)
    x_matrix = (canvas.width - level.brickWidth * columnsCount - (columnsCount - 1) * level.padding) / 2
    x_matrix += level.brickWidth / 2
    y_matrix = (canvas.height - level.brickHeight * rowsCount - (rowsCount - 1) * level.padding) / 2
    y_matrix += level.brickHeight / 2

    for (let row = 0; row < level.brickMatrix.length; row++) {
        for (let col = 0; col < level.brickMatrix[row].length; col++) {
            if (level.brickMatrix[row][col] === 1) {
                x = x_matrix + col * (level.brickWidth + level.padding)
                y = y_matrix + row * (level.brickHeight + level.padding)
                brick = new Brick(
                    x, y,
                    level.brickWidth, level.brickHeight,
                    level.colorMatrix[row][col], '', level.pointMatrix[row][col]
                )
                if (level.powerItemMatrix[row][col] != '' && level.powerItemMatrix[row][col] != null) {
                    brick.powerItem = getNewPowerItem(level.powerItemMatrix[row][col])
                    brick.powerItem.x = x
                    brick.powerItem.y = y
                }
                bricks[col + (row * columnsCount)] = brick
            }
        }
    }

    return bricks
}

level1 = () => {
    var level = new Level()

    level.brickMatrix = [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    ]
    level.pointMatrix = [
        [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
        [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
        [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
        [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
        [25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
        [25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25],
        [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
        [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
        [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
        [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
    ]
    level.colorMatrix = [
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83'],
        ['#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83'],
        ['#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767'],
        ['#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767', '#365767'],
        ['#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83'],
        ['#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83', '#396B83'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
    ]
    level.powerItemMatrix = [
        ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""],
        ["", "GLASS", "", "", "", "", "", "", "", "", "SHRINK", "", "FAST", "", "", ""],
        ["", "", "SLOW", "", "", "", "", "POOP", "", "", "SHRINK", "", "", "FUZZ", "", ""],
        ["", "", "", "", "", "", "EXTEND", "CRAZY_BOUNCE", "POOP", "", "", "", "", "", "", ""],
        ["", "", "", "", "", "", "", "", "POOP", "", "EXTEND", "", "ICE", "", "", ""],
        ["", "", "", "", "", "ICE", "EXTEND", "FUZZ", "", "", "GLASS", "", "", "", "", ""],
        ["", "", "", "", "", "", "", "SLOW", "", "", "POOP", "FAST", "", "", "", ""],
        ["", "", "", "", "POOP", "FAST", "", "EXTEND", "", "", "", "", "", "FAST", "CRAZY_BOUNCE", ""],
        ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""],
        ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""],
    ]
    return createBricks(level, game.canvas)
}


level2 = () => {
    var level = new Level()

    level.brickMatrix = [
        [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
        [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
        [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
        [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
        [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
        [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
        [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
        [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
        [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
    ]
    level.pointMatrix = [
        [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
        [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
        [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
        [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
        [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
        [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
        [20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20],
        [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
        [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
    ]
    level.colorMatrix = [
        ['#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862'],
        ['#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862'],
        ['#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862'],
        ['#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862'],
        ['#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862'],
        ['#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862'],
        ['#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862'],
        ['#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862'],
        ['#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862', '#257862'],
    ]
    level.powerItemMatrix = [
        ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],
        ['', '', '', '', '', 'POOP', '', 'GLASS', '', '', '', 'POOP', '', '', '', '', ''],
        ['', '', '', '', 'ICE', '', 'POOP', '', 'CRAZY_BOUNCE', '', 'GLASS', '', '', '', '', '', ''],
        ['', 'FUZZ', '', '', '', 'SHRINK', '', 'FAST', '', 'CRAZY_BOUNCE', '', 'SLOW', '', '', '', '', ''],
        ['', '', '', '', 'FUZZ', '', '', '', '', '', '', '', 'POOP', '', '', '', ''],
        ['', '', '', 'ICE', '', '', '', 'GLASS', '', 'EXTEND', '', '', '', '', '', '', ''],
        ['', '', '', '', '', '', 'SHRINK', '', '', '', '', '', '', '', '', '', ''],
        ['', '', '', 'EXTEND', '', 'POOP', '', '', '', '', '', '', '', 'GLASS', '', '', ''],
        ['SLOW', '', '', '', '', '', 'FAST', '', 'FUZZ', '', '', '', 'SHRINK', '', '', '', ''],
    ]

    return createBricks(level, game.canvas)
}


level3 = () => {
    var level = new Level()

    level.brickMatrix = [
        [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0],
        [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0],
        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1],
        [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1],
        [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1],
        [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0],
        [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0],
        [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0],
        [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0],
        [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0],
        [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
    ]
    level.pointMatrix = [
        [0, 0, 15, 15, 0, 0, 0, 15, 15, 0, 0],
        [0, 15, 15, 15, 15, 0, 15, 15, 15, 15, 0],
        [0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0],
        [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15],
        [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15],
        [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15],
        [0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0],
        [0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 0],
        [0, 0, 15, 15, 15, 15, 15, 15, 15, 0, 0],
        [0, 0, 15, 15, 15, 15, 15, 15, 15, 0, 0],
        [0, 0, 0, 15, 15, 15, 15, 15, 0, 0, 0],
        [0, 0, 0, 15, 15, 15, 15, 15, 0, 0, 0],
        [0, 0, 0, 0, 15, 15, 15, 0, 0, 0, 0],
        [0, 0, 0, 0, 15, 15, 15, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0],
    ]
    level.colorMatrix = [
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
        ['#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114', '#993114'],
    ]
    level.powerItemMatrix = [
        ['', '', '', '', '', '', '', '', '', '', ''],
        ['', '', '', '', 'FAST', '', '', '', '', '', ''],
        ['', '', '', 'FAST', 'POOP', 'EXTEND', '', '', '', '', ''],
        ['', '', '', '', 'SHRINK', '', '', '', '', 'GLASS', ''],
        ['', 'FAST', '', '', '', '', '', '', '', '', 'FAST'],
        ['ICE', 'FUZZ', '', '', '', '', '', '', '', 'POOP', 'SHRINK'],
        ['', 'SHRINK', 'GLASS', '', '', '', '', '', '', '', ''],
        ['', '', 'CRAZY_BOUNCE', '', '', '', '', '', '', 'FUZZ', ''],
        ['', '', 'DEAD', 'EXTEND', '', '', '', '', 'GLASS', '', ''],
        ['', '', '', 'ICE', '', '', '', '', '', '', ''],
        ['', '', '', '', 'DEAD', '', 'POOP', '', '', '', ''],
        ['', '', '', '', 'FUZZ', '', '', '', '', '', ''],
        ['', '', '', '', 'SHRINK', '', 'FAST', '', '', '', ''],
        ['', '', '', '', 'FAST', '', '', '', '', '', ''],
        ['', '', '', '', '', 'POOP', '', '', '', '', ''],
    ]

    return createBricks(level, game.canvas)
}


level4 = () => {
    var level = new Level()

    level.brickMatrix = [
        [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0],
        [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0],
        [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1],
        [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1],
        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1],
        [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1],
        [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1],
        [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0],
        [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0],
        [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0],
    ]
    level.pointMatrix = [
        [0, 0, 0, 0, 20, 20, 20, 20, 0, 0, 0, 0],
        [0, 0, 20, 20, 20, 0, 0, 20, 20, 20, 0, 0],
        [0, 20, 20, 0, 0, 0, 0, 0, 0, 20, 20, 0],
        [20, 20, 0, 0, 40, 0, 0, 40, 0, 0, 20, 20],
        [20, 0, 0, 40, 40, 0, 0, 40, 40, 0, 0, 20],
        [20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20],
        [20, 0, 20, 0, 0, 0, 0, 0, 0, 20, 0, 20],
        [20, 0, 0, 20, 0, 0, 0, 0, 20, 0, 0, 20],
        [20, 20, 0, 0, 25, 25, 25, 25, 0, 0, 20, 20],
        [0, 20, 20, 0, 0, 0, 0, 0, 0, 20, 20, 0],
        [0, 0, 20, 20, 20, 0, 0, 20, 20, 20, 0, 0],
        [0, 0, 0, 0, 20, 20, 20, 20, 0, 0, 0, 0],

    ]
    level.colorMatrix = [
        ['#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119'],
        ['#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119'],
        ['#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119'],
        ['#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119'],
        ['#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119'],
        ['#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119'],
        ['#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119'],
        ['#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119'],
        ['#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119'],
        ['#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119'],
        ['#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119'],
        ['#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119', '#095119'],
    ]
    level.powerItemMatrix = [
        [null, null, null, null, '', '', '', '', null, null, null, null],
        [null, null, 'SHRINK', '', 'POOP', null, null, '', 'SLOW', '', null, null],
        [null, 'FAST', 'GLASS', null, null, null, null, null, null, 'FUZZ', 'FAST', null],
        ['', '', null, null, 'POOP', null, null, 'CRAZY_BOUNCE', null, null, 'EXTEND', ''],
        ['', null, null, 'FUZZ', 'ICE', null, null, 'POOP', 'DEAD', null, null, ''],
        ['POOP', null, null, null, null, null, null, null, null, null, null, 'GLASS'],
        ['ICE', null, '', null, null, null, null, null, null, 'SLOW', null, ''],
        ['SHRINK', null, null, '', null, null, null, null, 'GLASS', null, null, 'FAST'],
        ['', '', null, null, '', 'ICE', 'EXTEND', 'POOP', null, null, 'FUZZ', 'FAST'],
        [null, 'SHRINK', 'CRAZY_BOUNCE', null, null, null, null, null, null, 'POOP', 'DEAD', null],
        [null, null, 'SHRINK', '', 'FAST', null, null, '', '', 'FAST', null, null],
        [null, null, null, null, '', 'DEAD', 'SHRINK', '', null, null, null, null],
    ]

    level.brickHeight = 26
    level.brickWidth = 26

    return createBricks(level, game.canvas)
}


level5 = () => {
    var level = new Level()

    level.brickMatrix = [
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],
        [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],
        [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    ]
    level.pointMatrix = [
        [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
        [10, 10, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 10, 10],
        [10, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 10],
        [10, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 10],
        [10, 10, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 10, 10],
        [10, 10, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 10, 10],
        [10, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 10],
        [10, 20, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 10],
        [10, 10, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 10, 10],
        [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10],
    ]
    level.colorMatrix = [
        ['#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d'],
        ['#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d'],
        ['#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d'],
        ['#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d'],
        ['#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d'],
        ['#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d'],
        ['#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d'],
        ['#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d'],
        ['#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d'],
        ['#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d', '#a67e2d'],
    ]
    level.powerItemMatrix = [
        ['', 'EXTEND', '', '', '', '', '', 'FUZZ', '', '', 'POOP', 'CRAZY_BOUNCE', '', '', 'EXTEND', '', ''],
        ['FUZZ', '', '', '', 'SHRINK', 'GLASS', '', '', 'FAST', '', 'DEAD', 'POOP', '', '', '', '', ''],
        ['', 'FAST', null, null, null, null, null, null, null, null, null, null, null, null, null, '', ''],
        ['', '', null, null, null, null, null, null, null, null, null, null, null, null, null, '', ''],
        ['', '', '', '', '', 'SHRINK', 'ICE', '', '', '', 'DEAD', '', 'SLOW', '', '', 'ICE', ''],
        ['', 'SHRINK', '', '', '', 'DEAD', '', '', '', '', '', 'FAST', 'SHRINK', '', '', '', ''],
        ['', 'POOP', null, null, null, null, null, null, null, null, null, null, null, null, null, '', ''],
        ['', '', null, null, null, null, null, null, null, null, null, null, null, null, null, '', ''],
        ['', 'EXTEND', '', 'POOP', 'FAST', 'SHRINK', '', 'GLASS', '', 'GLASS', 'POOP', '', '', '', '', 'POOP', ''],
        ['FAST', '', '', '', 'FAST', '', '', '', '', 'FUZZ', '', 'EXTEND', '', '', '', 'CRAZY_BOUNCE', ''],
    ]

    return createBricks(level, game.canvas)
}


level6 = () => {
    var level = new Level()

    level.brickMatrix = [
        [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],
        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0],
        [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0],
        [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0],
        [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0],
        [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0],
        [0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1],
    ]
    level.pointMatrix = [
        [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],
        [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],
        [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],
        [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],
        [30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30],
        [30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30],
        [30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30],
        [30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30],
        [30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30],
        [30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30],
        [30, 30, 30, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 30, 30, 30],
        [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],
        [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],
        [30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],
    ]
    level.colorMatrix = [
        ['#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461'],
        ['#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461'],
        ['#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461'],
        ['#913461', '#913461', '#913461', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#913461', '#913461', '#913461'],
        ['#913461', '#913461', '#913461', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#913461', '#913461', '#913461'],
        ['#913461', '#913461', '#913461', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#913461', '#913461', '#913461'],
        ['#913461', '#913461', '#913461', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#913461', '#913461', '#913461'],
        ['#913461', '#913461', '#913461', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#913461', '#913461', '#913461'],
        ['#913461', '#913461', '#913461', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#913461', '#913461', '#913461'],
        ['#913461', '#913461', '#913461', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#913461', '#913461', '#913461'],
        ['#913461', '#913461', '#913461', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#a62d67', '#913461', '#913461', '#913461'],
        ['#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461'],
        ['#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461'],
        ['#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461', '#913461'],
    ]
    level.powerItemMatrix = [
        ['POOP', '', 'SHRINK', '', '', null, null, null, null, null, null, null, 'SHRINK', '', 'DEAD', '', 'POOP'],
        [null, '', 'DEAD', 'EXTEND', '', 'CRAZY_BOUNCE', null, null, null, null, null, '', 'DEAD', '', 'ICE', '', null],
        [null, null, '', 'DEAD', '', 'ICE', 'FUZZ', null, null, null, 'EXTEND', '', 'SHRINK', '', '', null, null],
        [null, null, null, '', 'FAST', '', 'POOP', '', null, '', '', 'DEAD', '', '', null, null, null],
        [null, null, '', 'FAST', '', 'POOP', '', '', 'DEAD', '', '', 'POOP', '', 'POOP', '', null, null],
        [null, 'POOP', '', '', 'EXTEND', '', 'FUZZ', 'POOP', '', 'FUZZ', '', '', '', 'FUZZ', '', '', null],
        ['FAST', '', '', 'DEAD', '', '', 'POOP', 'DEAD', '', 'POOP', '', 'FAST', '', '', 'DEAD', '', ''],
        ['', 'CRAZY_BOUNCE', '', '', 'SHRINK', '', 'FAST', '', 'POOP', '', 'FAST', '', '', '', '', '', 'POOP'],
        [null, '', '', 'DEAD', 'FUZZ', '', '', '', 'FAST', '', 'DEAD', '', '', 'DEAD', '', 'CRAZY_BOUNCE', null],
        [null, null, 'ICE', '', '', 'FUZZ', 'DEAD', '', 'POOP', '', 'FUZZ', '', '', 'FAST', '', null, null],
        [null, null, null, '', 'EXTEND', '', 'ICE', '', null, 'ICE', '', 'POOP', '', '', null, null, null],
        [null, null, '', 'DEAD', '', '', 'DEAD', null, null, null, 'POOP', '', 'DEAD', '', 'FAST', null, null],
        [null, 'POOP', '', '', 'EXTEND', '', null, null, null, null, null, 'FUZZ', '', 'FAST', '', '', null],
        ['', 'FAST', '', '', 'DEAD', null, null, null, null, null, null, null, 'ICE', '', 'DEAD', '', 'FAST'],
    ]

    return createBricks(level, game.canvas)
}
