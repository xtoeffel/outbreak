
createBricks = (brickMatrix, colorMatrix, brickWidth, brickHeight, padding, canvas) => {

    if (!Array.isArray(brickMatrix))
        throw "bricks-matrix is not an array"
    if (!Array.isArray(colorMatrix))
        throw "color-matrix is not an array"
    if (brickMatrix.length == 0)
        throw "brick-matrix is empty"
    if (colorMatrix.length == 0)
        throw "color-matrix is empty"

    let rowsCount = brickMatrix.length
    if (rowsCount != colorMatrix.length)
        throw "brick-matrix and color-matrix have different number of rows"

    columnsCount = 0
    for (let row = 0; row < brickMatrix.length; row++) {
        if (!Array.isArray(brickMatrix[row]))
            throw "brick-matrix: row " + row + " is not an array"
        if (row === 0) {
            columnsCount = brickMatrix[row].length
            continue
        }
        if (brickMatrix[row].length != columnsCount)
            throw "brick-matrix: inconsistent number of columns in row " + row
    }
    for (let row = 0; row < colorMatrix.length; row++) {
        if (!Array.isArray(colorMatrix[row]))
            throw "color-matrix: row " + row + " is not an array"
        if (colorMatrix[row].length != columnsCount)
            throw "color-matrix: inconsistent number of columns in row " + row
    }

    bricks = new Array(rowsCount * columnsCount)
    x_matrix = (canvas.width - brickWidth * columnsCount - (columnsCount - 1) * padding) / 2
    x_matrix += brickWidth / 2
    y_matrix = (canvas.height - brickHeight * rowsCount - (rowsCount - 1) * padding) / 2
    y_matrix += brickHeight / 2

    for (let row = 0; row < brickMatrix.length; row++) {
        for (let col = 0; col < brickMatrix[row].length; col++) {
            if (brickMatrix[row][col] === 1) {
                x = x_matrix + col * (brickWidth + padding)
                y = y_matrix + row * (brickHeight + padding)
                bricks[col + (row * columnsCount)] =
                    new Brick(x, y, brickWidth, brickHeight, colorMatrix[row][col], '')

            }
        }
    }

    return bricks
}


level1 = () => {
    const brickMatrix = [
        [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0],
        [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0],
        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
        [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0],
        [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
        [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0],
        [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
    ]
    const colorMatrix = [
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
    ]
    return createBricks(brickMatrix, colorMatrix, 40, 20, 2, game.canvas)
}


level2 = () => {
    const brickMatrix = [
        [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0],
        [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0],
        [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1],
        [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1],
        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1],
        [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1],
        [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1],
        [0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0],
        [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0],
        [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0],
    ]
    const colorMatrix = [
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
        ['#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8', '#3281a8'],
    ]
    return createBricks(brickMatrix, colorMatrix, 20, 20, 2, game.canvas)
}
